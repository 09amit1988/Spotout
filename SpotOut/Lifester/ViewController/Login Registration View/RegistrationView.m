
//  RegistrationView.m
//  Lifester
//
//  Created by App Developer on 28/01/13.
//  Copyright (c) 2013 App Developer. All rights reserved.
//

#import "RegistrationView.h"
#import "JSON.h"
#import "AlertHandler.h"
#import "ASIFormDataRequest.h"
#import "Reachability.h"
#import <QuartzCore/QuartzCore.h>
#import "UIImage+Uiimage_Fixorientation.h"
#import "CategorySelectionViewController.h"

@interface RegistrationView ()

@end

@implementation RegistrationView

@synthesize city, state, country;
@synthesize btnCancel, btnWebviewCancel;
@synthesize txtprofilename;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    
    return (interfaceOrientation==UIInterfaceOrientationPortrait);
}

- (BOOL)shouldAutorotate
{
    return YES;
}

- (NSUInteger)supportedInterfaceOrientations
{
    appDelegateObj.shouldRotate = YES;
    return UIInterfaceOrientationMaskAll;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    
    [self hideKeyboard];
    [pickerViewPopup removeFromSuperview];
}

-(void)locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation {
    
    [locationManager stopUpdatingLocation];
    locationManager.delegate=nil;
}

-(void)viewDidDisappear:(BOOL)animated {
    
    [locationManager stopUpdatingLocation];
    locationManager.delegate=nil;
}

-(UIStatusBarStyle)preferredStatusBarStyle{
    return UIStatusBarStyleLightContent;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
//    self.view.backgroundColor = [UIColor colorWithRed:230/255.0f green:230/255.0f blue:229/255.0f alpha:1];
    backgroundView.backgroundColor = VIEW_COLOR;
    backgroundView1.backgroundColor = VIEW_COLOR;
    [btnUsernameAccesary setHidden:YES];
    isUsernameAutoGenerated = NO;
    
    self.view.backgroundColor = WHITE_BACKGROUND_COLOR;
    PrivacyView.backgroundColor = WHITE_BACKGROUND_COLOR;
    appDelegateObj = (AppDelegate*)[[UIApplication sharedApplication] delegate];
    
    [[UIApplication sharedApplication] setStatusBarHidden:NO];
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationNone];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(dismissPresentControllerNotification:) name:@"DismissSignupScreenNotification" object:nil];
    
    self.btnCancel = [UIButton buttonWithType:UIButtonTypeCustom];
    self.btnCancel.frame = CGRectMake(0, 6, 56, 32);
    [self.btnCancel.titleLabel setTextAlignment:NSTextAlignmentLeft];
    [self.btnCancel setContentMode:UIViewContentModeLeft];
    [self.btnCancel setTitle:@"Cancel" forState:UIControlStateNormal];
    [self.btnCancel.titleLabel setTextColor:[UIColor whiteColor]];
    [self.btnCancel addTarget:self action:@selector(BackBtnCall) forControlEvents:UIControlEventTouchUpInside];
    [self.btnCancel.titleLabel setFont:[UIFont fontWithName:HELVETICANEUEREGULAR size:17.0]];
    
    self.btnWebviewCancel = [UIButton buttonWithType:UIButtonTypeCustom];
    self.btnWebviewCancel.frame = CGRectMake(-10, 6, 39, 32);
    [self.btnWebviewCancel setImage:[UIImage imageNamed:@"arrow1.png"] forState:UIControlStateNormal];
    [self.btnWebviewCancel setContentMode:UIViewContentModeLeft];
    [self.btnWebviewCancel addTarget:self action:@selector(CancelWebCall:) forControlEvents:UIControlEventTouchUpInside];
    
    UIBarButtonItem *negativeSpacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:nil action:nil];
    negativeSpacer.width = 0;
    if (IS_IOS7)
        negativeSpacer.width = -10;
    
    UIBarButtonItem *backButtonItem = [[[UIBarButtonItem alloc] initWithCustomView:self.btnCancel] autorelease];
    self.navigationItem.leftBarButtonItems = [NSArray arrayWithObjects:negativeSpacer, backButtonItem, nil];
    self.navigationItem.titleView = [AppDelegate titleLabelWithTitle:@"Registration"];
    
    if (IS_IPHONE_5) {
        scroller.contentSize=CGSizeMake(320, 545);
    } else {
        scroller.contentSize=CGSizeMake(320, 640);
    }
    scroller.showsVerticalScrollIndicator = NO;
    headLbl.textColor = [UIColor colorWithRed:3/255.0f green:82/255.0f blue:110/255.0f alpha:1];
    flag = -1;
    webView.scrollView.delegate = self;
    
    imagePicker = [[UIImagePickerController alloc]init];
    imagePicker.delegate = self;
    isUpload = NO;
    
    locationManager = [[CLLocationManager alloc] init];
    [locationManager setDelegate:self];
    [locationManager setDistanceFilter:kCLDistanceFilterNone];
    [locationManager setDesiredAccuracy:kCLLocationAccuracyBest];
    [locationManager startUpdatingLocation];
    
    [toolbar setShadowImage:[[UIImage alloc] init] forToolbarPosition:UIToolbarPositionAny];
    [toolbar setBackgroundImage:[UIImage imageNamed:@"Pickerbar.png"] forToolbarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];
    [toolbar sizeToFit];
    [txtPhoneNumber setInputAccessoryView:toolbar];
    
    Reachability *networkReachability = [Reachability reachabilityForInternetConnection];
    NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];
    if (networkStatus == NotReachable) {
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"No Internet Connection" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    } else {
        self.view.userInteractionEnabled = NO;
        [appDelegateObj showActivity:self.view showOrHide:YES];
        
        NSString *strURL = [NSString stringWithFormat:@"http://maps.googleapis.com/maps/api/geocode/json?sensor=true&latlng=%f,%f",locationManager.location.coordinate.latitude,locationManager.location.coordinate.longitude];
        
        flag = 0;
        ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
        
        [request setDelegate:self];
        [request startAsynchronous];
    }
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [PrivacyView removeFromSuperview];
    
    UIFont *fontStyle = [UIFont fontWithName:HELVETICANEUEREGULAR size:14.0];
    
    txtprofilename.textColor = SELECTED_COLOR;
    txtUsername.textColor = SELECTED_COLOR;
    txtPhoneNumber.textColor = SELECTED_COLOR;
    fname.textColor = SELECTED_COLOR;
    lname.textColor = SELECTED_COLOR;
    txtEmail.textColor = SELECTED_COLOR;
    txtPassword.textColor = SELECTED_COLOR;
    dob.textColor = SELECTED_COLOR;
    sex.textColor = SELECTED_COLOR;
    
    txtprofilename.font = fontStyle;
    txtUsername.font = fontStyle;
    fname.font = fontStyle;
    lname.font = fontStyle;
    txtEmail.font = fontStyle;
    txtPassword.font = fontStyle;
    dob.font = fontStyle;
    sex.font = fontStyle;
    
    
    
    if ([txtEmail respondsToSelector:@selector(setAttributedPlaceholder:)]) {
        txtprofilename.attributedPlaceholder = [[NSAttributedString alloc] initWithString:txtprofilename.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        txtUsername.attributedPlaceholder = [[NSAttributedString alloc] initWithString:txtUsername.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        txtPhoneNumber.attributedPlaceholder = [[NSAttributedString alloc] initWithString:txtPhoneNumber.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        fname.attributedPlaceholder = [[NSAttributedString alloc] initWithString:fname.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        lname.attributedPlaceholder = [[NSAttributedString alloc] initWithString:lname.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        dob.attributedPlaceholder = [[NSAttributedString alloc] initWithString:dob.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        sex.attributedPlaceholder = [[NSAttributedString alloc] initWithString:sex.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        txtEmail.attributedPlaceholder = [[NSAttributedString alloc] initWithString:txtEmail.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
        txtPassword.attributedPlaceholder = [[NSAttributedString alloc] initWithString:txtPassword.placeholder attributes:@{NSForegroundColorAttributeName: NORMAL_COLOR}];
    } else {
        NSLog(@"Cannot set placeholder text's color, because deployment target is earlier than iOS 6.0");
        // TODO: Add fall-back code to set placeholder color.
    }
}

-(IBAction)BackBtnCall {
    
    [self hideKeyboard];
    [pickerViewPopup removeFromSuperview];
    city = @"";
    state = @"";
    country = @"";

    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)dismissPresentControllerNotification:(NSNotification*)note {
    [self dismissViewControllerAnimated:NO completion:nil];
}

-(void)hideKeyboard {
    [txtprofilename resignFirstResponder];
    [txtUsername resignFirstResponder];
    [fname resignFirstResponder];
    [lname resignFirstResponder];
    [dob resignFirstResponder];
    [sex resignFirstResponder];
    [txtPhoneNumber resignFirstResponder];
    [txtEmail resignFirstResponder];
    [txtPassword resignFirstResponder];
    [txtConfirmEmail resignFirstResponder];
}

- (IBAction)btnHideConfirmEmailOverlayAction:(id)sender
{
    [overLayViewInfo removeFromSuperview];
}

-(IBAction)btnConfirm:(id)sender
{
    [overLayViewInfo removeFromSuperview];
    [self RegistrationWebServiceCall];
}

-(IBAction)btnTerms:(id)sender {
    self.navigationItem.leftBarButtonItem = nil;
    
    UIBarButtonItem *negativeSpacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:nil action:nil];
    negativeSpacer.width = -10;
    if (IS_IOS7)
        negativeSpacer.width = -20;

    UIBarButtonItem *backButtonItem = [[[UIBarButtonItem alloc] initWithCustomView:self.btnWebviewCancel] autorelease];
    
//    [self setLeftBarButtonItems:[NSArray arrayWithObjects:negativeSpacer, leftBarButtonItem, nil]];
    self.navigationItem.leftBarButtonItems = [NSArray arrayWithObjects:negativeSpacer, backButtonItem, nil];
    
    [self.view addSubview:PrivacyView];
    [actind startAnimating];
    
    CGPoint top = CGPointMake(0, 0);
    [webView.scrollView setContentOffset:top animated:YES];
    self.navigationItem.titleView = [AppDelegate titleLabelWithTitle:@"Terms"];
    
    [webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://lifester-app.com/apps/terms_privacy_policy.html"]]];
    
    // [webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://lifester.india-web-design.com/terms_privacy_policy.html"]]];
}

-(IBAction)btnCondition:(id)sender {
    self.navigationItem.leftBarButtonItem = nil;
    
    UIBarButtonItem *negativeSpacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:nil action:nil];
    negativeSpacer.width = -10;
    if (IS_IOS7)
        negativeSpacer.width = -20;
    
    UIBarButtonItem *backButtonItem = [[[UIBarButtonItem alloc] initWithCustomView:self.btnWebviewCancel] autorelease];
    self.navigationItem.leftBarButtonItems = [NSArray arrayWithObjects:negativeSpacer, backButtonItem, nil];

    [self.view addSubview:PrivacyView];
    [actind startAnimating];
    
    CGPoint top = CGPointMake(0, 0);
    [webView.scrollView setContentOffset:top animated:YES];
    self.navigationItem.titleView = [AppDelegate titleLabelWithTitle:@"Privacy Policy"];
    
    [webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://lifester-app.com/apps/terms_privacy_policy.html"]]];
    
    // [webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://lifester.india-web-design.com/terms_privacy_policy.html"]]];
}

-(IBAction)CancelWebCall:(id)sender {
    [PrivacyView removeFromSuperview];
    self.navigationItem.leftBarButtonItem = nil;
    
    UIBarButtonItem *negativeSpacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                    target:nil action:nil];
    negativeSpacer.width = 0;
    if (IS_IOS7)
        negativeSpacer.width = -10;
    
    UIBarButtonItem *backButtonItem = [[[UIBarButtonItem alloc] initWithCustomView:self.btnCancel] autorelease];
    self.navigationItem.leftBarButtonItems = [NSArray arrayWithObjects:negativeSpacer, backButtonItem, nil];
    self.navigationItem.titleView = [AppDelegate titleLabelWithTitle:@"Registration"];
}

-(void)webViewDidFinishLoad:(UIWebView *)webView {
    
    [actind stopAnimating];
}

#pragma mark - Web service call Methods

-(void)RegistrationWebServiceCall {
    
    self.view.userInteractionEnabled = NO;
    [appDelegateObj showActivity:self.view showOrHide:YES];
    
    appDelegateObj.LoginFlag=FALSE;
    flag=1;
    
    int number = (arc4random()%99999999)+1;
    NSString *string = [NSString stringWithFormat:@"%i", number];
    NSString *strURL = [NSString stringWithFormat:@"%@raws/ws_users.php?rnd=%@",SERVER_URL,string];
    
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    
    NSString *tempStr = @"";
    [[NSUserDefaults standardUserDefaults] synchronize];
    
    if ([[[NSUserDefaults standardUserDefaults] valueForKey:@"Sex"] isEqualToString:@"Male"] || [[[NSUserDefaults standardUserDefaults] valueForKey:@"Sex"] isEqualToString:@"male"]) {
        tempStr = @"M";
    } else {
        tempStr = @"F";
    }
    
    [request setPostValue:@"1.0.0" forKey:@"api_version"];
    [request setPostValue:@"do_app_registration" forKey:@"todoaction"];
    [request setPostValue:@"json" forKey:@"format"];

    [request setPostValue:txtConfirmEmail.text forKey:@"login_email_id"];
    [request setPostValue:txtPassword.text forKey:@"login_password"];
    [request setPostValue:txtUsername.text forKey:@"login_username"];
    [request setPostValue:txtprofilename.text forKey:@"profile_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"FName"] forKey:@"f_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"LName"] forKey:@"l_name"];
    //[request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"DOB"] forKey:@"dob"]; //DOB
    [request setPostValue:@"" forKey:@"dob"];
    [request setPostValue:@"" forKey:@"sex"];
    //[request setPostValue:tempStr forKey:@"sex"];
    [request setPostValue:@"" forKey:@"street"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"City"] forKey:@"city_long_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"City_Short_Name"] forKey:@"city_short_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"State"] forKey:@"state_long_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"State_Short_Name"] forKey:@"state_short_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"Country"] forKey:@"country_long_name"];
    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"Country_Short_Name"] forKey:@"country_short_name"];
    [request setPostValue:[NSNumber numberWithBool:NO] forKey:@"lwfb"];
    
    //    [request setPostValue:appDelegateobj.didSelectChoiceID forKey:@"choice_id"];
    //[request setPostValue:@"1" forKey:@"choice_id"];
    
    
    //    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"EmailId"] forKey:@"login_id_3rdparty"];
    //    [request setPostValue:[[NSUserDefaults standardUserDefaults] objectForKey:@"type_3rdparty"] forKey:@"type_3rdparty"];
    //    [request setPostValue:[[NSUserDefaults standardUserDefaults] valueForKey:@"FBID"] forKey:@"access_id_3rdparty"];
    //    [request setPostValue:[[NSUserDefaults standardUserDefaults] objectForKey:@"accessToken"] forKey:@"access_token_3rdparty"];
    
    NSLog(@"Profile Image == %@", [[NSUserDefaults standardUserDefaults] valueForKey:@"ImgUrl"]);
    
    [request setDelegate:self];
    [request setRequestMethod:@"POST"];
    [request addData:[[NSUserDefaults standardUserDefaults] valueForKey:@"ImgUrl"] withFileName:@"image.jpg" andContentType:@"image/jpeg" forKey:@"image_file"];
    
    [request startAsynchronous];
}

-(void)LoginWebServiceCall {
    
    self.view.userInteractionEnabled = NO;
    [appDelegateObj showActivity:self.view showOrHide:YES];
    
    appDelegateObj.LoginFlag=TRUE;
    
    flag=1;
    
    NSString *appName = [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleDisplayName"];
    UIDevice *currentDevice = [UIDevice currentDevice];
    NSString *model = [currentDevice model];
    NSString *deviceVersion = [currentDevice systemVersion];
    NSString *name = [currentDevice name];
    NSString *appVersion = [[NSBundle mainBundle] objectForInfoDictionaryKey:(NSString *)kCFBundleVersionKey];
    NSString *uuidString = [appDelegateObj idForDevice];
    
#if TARGET_IPHONE_SIMULATOR
    appDelegateObj.dt = @"6f44395d0bbd6afd64bfba8710047bcabafb3a8d1bfa5725e398d0a2bbbe3359";
#endif
    
    int number = (arc4random()%99999999)+1;
    NSString *string = [NSString stringWithFormat:@"%i", number];
    
    NSString *strURL = [NSString stringWithFormat:@"%@raws/ws_users.php?rnd=%@",SERVER_URL,string];
    
    [[NSUserDefaults standardUserDefaults] setObject:txtConfirmEmail.text forKey:@"LogInID"];
    
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    
    [request setPostValue:@"1.0.0" forKey:@"api_version"];
    [request setPostValue:@"do_app_login" forKey:@"todoaction"];
    [request setPostValue:@"json" forKey:@"format"];
    [request setPostValue:txtConfirmEmail.text forKey:@"login_id"];
    [request setPostValue:txtPassword.text forKey:@"login_password"];
    [request setPostValue:appName forKey:@"appname"];
    [request setPostValue:appVersion forKey:@"appversion"];
    [request setPostValue:uuidString forKey:@"device_uid"];
    [request setPostValue:appDelegateObj.dt forKey:@"device_token"];
    [request setPostValue:name forKey:@"device_name"];
    [request setPostValue:model forKey:@"device_model"];
    [request setPostValue:deviceVersion forKey:@"device_version"];
    [request setPostValue:@"iOS" forKey:@"device_os"];
    [request setPostValue:push_mode forKey:@"push_mode"];
    [request setPostValue:[NSNumber numberWithBool:NO] forKey:@"lwfb"];
    
    if (locationManager.location.coordinate.latitude!=0.000000 && locationManager.location.coordinate.latitude!=0.000000) {
        
        [request setPostValue:[NSString stringWithFormat:@"%f %f",locationManager.location.coordinate.latitude,locationManager.location.coordinate.longitude] forKey:@"gps_coordinate"];
    }
    [request setDelegate:self];
    [request setRequestMethod:@"POST"];
    
    [request startAsynchronous];
}

- (void)UpdatePasswordWebServiceCall:(NSString *)newPassword isLoginWithFacebook:(BOOL)status
{
    flag=2;
    
    int number = (arc4random()%99999999)+1;
    NSString *string = [NSString stringWithFormat:@"%i", number];
    
    NSString *strURL = [NSString stringWithFormat:@"%@raws/ws_users.php?rnd=%@",SERVER_URL,string];
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    
    [request setPostValue:@"1.0.0" forKey:@"api_version"];
    [request setPostValue:@"do_app_updation" forKey:@"todoaction"];
    [request setPostValue:@"json" forKey:@"format"];
    
    [request setPostValue:txtConfirmEmail.text forKey:@"login_email_id"];
    [request setPostValue:newPassword forKey:@"login_password"];
    [request setPostValue:[NSNumber numberWithBool:status] forKey:@"lwfb"];
    
    [request setDelegate:self];
    [request setRequestMethod:@"POST"];
    
    [request startAsynchronous];
}

- (void)CheckUsernameExist:(NSString *)username
{
    flag=3;
    
    self.view.userInteractionEnabled = NO;
    [appDelegateObj showActivity:self.view showOrHide:YES];
    
    int number = (arc4random()%99999999)+1;
    NSString *string = [NSString stringWithFormat:@"%i", number];
    
    NSString *strURL = [NSString stringWithFormat:@"%@raws/ws_users.php?rnd=%@",SERVER_URL,string];
    ASIFormDataRequest *request = [ASIFormDataRequest requestWithURL:[NSURL URLWithString:strURL]];
    
    [request setPostValue:@"1.0.0" forKey:@"api_version"];
    [request setPostValue:@"do_check_username" forKey:@"todoaction"];
    [request setPostValue:@"json" forKey:@"format"];
    
    [request setPostValue:username forKey:@"login_username"];
    
    [request setDelegate:self];
    [request setRequestMethod:@"POST"];
    
    [request startAsynchronous];
}

- (void)requestFinished:(ASIHTTPRequest *)request {
    
    //[AlertHandler hideAlert];
    if (flag == 0) {
        NSString *receivedString = [request responseString];
        
        NSDictionary *responseObject = [receivedString JSONValue];
        
        if ([[responseObject valueForKey:@"status"] isEqualToString:@"ZERO_RESULTS"]) {
            
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"No Location Found" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
            [alert show];
            [alert release];
            //country.userInteractionEnabled=YES;
        }
        else {
            NSArray *items = [responseObject objectForKey:@"results"];
            NSArray *tempArr = [[items objectAtIndex:0] valueForKey:@"address_components"];
            
            //country.userInteractionEnabled=NO;
            
            for (int i=0; i<[tempArr count]; i++) {
                
                if ([[[tempArr objectAtIndex:i] valueForKey:@"types"] count]>0) {
                    
                    if ([[[[tempArr objectAtIndex:i] valueForKey:@"types"] objectAtIndex:0] isEqualToString:@"locality"]) {
                        
                        self.city = [[tempArr objectAtIndex:i] valueForKey:@"long_name"];
                        
                        // [[[[items objectAtIndex:0] valueForKey:@"address_components"] objectAtIndex:i] valueForKey:@"long_name"];
                        
                        [[NSUserDefaults standardUserDefaults] setObject:[[tempArr objectAtIndex:i] valueForKey:@"short_name"] forKey:@"City_Short_Name"];
                    }
                    if ([[[[tempArr objectAtIndex:i] valueForKey:@"types"] objectAtIndex:0] isEqualToString:@"administrative_area_level_1"]) {
                        
                        self.state = [[tempArr objectAtIndex:i] valueForKey:@"long_name"];
                        
                        // [[[[items objectAtIndex:0] valueForKey:@"address_components"] objectAtIndex:i] valueForKey:@"long_name"];
                        
                        [[NSUserDefaults standardUserDefaults] setObject:[[tempArr objectAtIndex:i] valueForKey:@"short_name"] forKey:@"State_Short_Name"];
                    }
                    if ([[[[tempArr objectAtIndex:i] valueForKey:@"types"] objectAtIndex:0] isEqualToString:@"country"]) {
                        
                        self.country = [[tempArr objectAtIndex:i] valueForKey:@"long_name"];
                        
                        
                        // [[[[items objectAtIndex:0] valueForKey:@"address_components"] objectAtIndex:i] valueForKey:@"long_name"];
                        
                        [[NSUserDefaults standardUserDefaults] setObject:[[tempArr objectAtIndex:i] valueForKey:@"short_name"] forKey:@"Country_Short_Name"];
                    }
                }
            }
            //[AlertHandler hideAlert];
        }
        self.view.userInteractionEnabled = YES;
        [appDelegateObj showActivity:self.view showOrHide:NO];
    }
    else if (flag == 1)
    {
        if (appDelegateObj.LoginFlag==FALSE) {
            
            NSString *receivedString = [request responseString];
            
            NSDictionary *responseObject = [receivedString JSONValue];
            NSArray *items = [responseObject objectForKey:@"raws"];
            
            NSLog(@"items  %@",items);
            
            if ([[[items valueForKey:@"status"] valueForKey:@"registration_status"] isEqualToString:@"true"]) {
                
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"DOB"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"Sex"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"City"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"City_Short_Name"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"State"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"State_Short_Name"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"Country"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"Country_Short_Name"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"Choices"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"ImgUrl"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"accessToken"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"EmailId"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"type_3rdparty"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"FBID"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"profileName"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"username"];
                [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"ProfImage"];
                
                appDelegateObj.LoginFromFBFlag = @"1";
                
//                if ([[[items valueForKey:@"status"] valueForKey:@"registration_status"] isEqualToString:@"true"])
//                {
//                    [[NSUserDefaults standardUserDefaults] setBool:YES forKey:@"IsNewRegistration"];
//                    [[NSUserDefaults standardUserDefaults] synchronize];
//                }
                
                [[NSUserDefaults standardUserDefaults] setValue:@"2" forKey:@"currentTab"];
                [appDelegateObj logout];
                
                
                
                if (locationManager.location.coordinate.latitude!=0.000000 && locationManager.location.coordinate.latitude!=0.000000)
                {
                    [self LoginWebServiceCall];
                }
                else {
                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Turn On Location Services to Allow \"Spotly\" to Determine Your Location" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
                    alert.tag=1001;
                    [alert show];
                    [alert release];
                }
            }
            else {
                
                UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:appname message:[[items valueForKey:@"status"] valueForKey:@"error_msg"] delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
                [alertView show];
                [alertView release];
            }
        }
        else {
            
            NSString *receivedString = [request responseString];
            
            NSDictionary *responseObject = [receivedString JSONValue];
            NSArray *items = [responseObject objectForKey:@"raws"];
            
            if ([[[items valueForKey:@"status"] valueForKey:@"login_status"] isEqualToString:@"true"]) {
                [self dismissViewControllerAnimated:NO completion:nil];
                
                appDelegateObj.userID = [[items valueForKey:@"dataset"] valueForKey:@"user_id"];
                appDelegateObj.PassKey = [[items valueForKey:@"dataset"] valueForKey:@"pass_key"];
                
                NSString *followingCount = [NSString stringWithFormat:@"%@",[[items valueForKey:@"dataset"] valueForKey:@"following_count"]];
                NSString *followerCount = [NSString stringWithFormat:@"%@",[[items valueForKey:@"dataset"] valueForKey:@"follower_count"]];
                [[NSUserDefaults standardUserDefaults] setObject:followingCount forKey:@"following_count"];
                [[NSUserDefaults standardUserDefaults] setObject:followerCount forKey:@"follower_count"];
                
                NSString *reviewCount = [NSString stringWithFormat:@"%@",[[items valueForKey:@"dataset"] valueForKey:@"review_count"]];
                [[NSUserDefaults standardUserDefaults] setObject:reviewCount forKey:@"review_count"];
                
                NSString *avg_rating = [NSString stringWithFormat:@"%.2f",[[[items valueForKey:@"dataset"] valueForKey:@"avg_rating_profile"] floatValue]];
                [[NSUserDefaults standardUserDefaults] setObject:avg_rating forKey:@"profile_rating"];
                
                [[NSUserDefaults standardUserDefaults] setObject:appDelegateObj.userID forKey:@"userID"];
                [[NSUserDefaults standardUserDefaults] setObject:appDelegateObj.PassKey forKey:@"PassKey"];
                if ([[[items valueForKey:@"dataset"] valueForKey:@"ProfileName"] class] == [NSNull class]) {
                    [[NSUserDefaults standardUserDefaults] setObject:@"" forKey:@"profileName"];
                } else {
                    [[NSUserDefaults standardUserDefaults] setObject:[[items valueForKey:@"dataset"] valueForKey:@"ProfileName"] forKey:@"profileName"];
                }
                
                if ([[[items valueForKey:@"dataset"] valueForKey:@"username"] class] == [NSNull class]) {
                    [[NSUserDefaults standardUserDefaults] setObject:@"" forKey:@"username"];
                } else {
                    [[NSUserDefaults standardUserDefaults] setObject:[[items valueForKey:@"dataset"] valueForKey:@"username"] forKey:@"username"];
                }
                
                if ([[[[items valueForKey:@"dataset"] valueForKey:@"profile_image"] valueForKey:@"has_profile_picture"] boolValue]) {
                    [[NSUserDefaults standardUserDefaults] setObject:[[[items valueForKey:@"dataset"] valueForKey:@"profile_image"] valueForKey:@"image_url"] forKey:@"ProfImage"];
                } else {
                    [[NSUserDefaults standardUserDefaults] setObject:DEFAULTPROFILEIMAGE forKey:@"ProfImage"];
                }
                
                [[NSUserDefaults standardUserDefaults] setObject:[[items valueForKey:@"dataset"] valueForKey:@"f_name"] forKey:@"FName"];
                [[NSUserDefaults standardUserDefaults] setObject:[[items valueForKey:@"dataset"] valueForKey:@"l_name"] forKey:@"LName"];
                
                [[NSUserDefaults standardUserDefaults] setValue:@"2" forKey:@"currentTab"];
                
                CategorySelectionViewController *viewController = [[[CategorySelectionViewController alloc] initWithNibName:@"CategorySelectionViewController" bundle:nil] autorelease];
                [appDelegateObj.navigationController pushViewController:viewController animated:YES];
            }
            else {
                UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:appname message:[[items valueForKey:@"status"] valueForKey:@"error_msg"] delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
                [alertView show];
                [alertView release];
            }
        }
        self.view.userInteractionEnabled = YES;
        [appDelegateObj showActivity:self.view showOrHide:NO];
    }
    else if (flag == 2)
    {
        
    }
    else if (flag == 3)
    {
        // parse response of Check username exist service
        NSString *receivedString = [request responseString];
        
        NSDictionary *responseObject = [receivedString JSONValue];
        NSDictionary *items = [responseObject objectForKey:@"raws"];
        if([[[items objectForKey:@"status"] objectForKey:@"username_status"] boolValue]) {
            NSLog(@"TRUE");
            [errorOverlay removeFromSuperview];
            [btnUsernameAccesary setHidden:NO];
            [btnUsernameAccesary setImage:[UIImage imageNamed:@"right-icon.png"] forState:UIControlStateNormal];
            txtUsername.textColor = [UIColor colorWithRed:129.0/255.0 green:197.0/255.0 blue:102.0/255.0 alpha:1.0];
            if (isFrameExtended) {
                isFrameExtended = NO;
                
                float yOrigin = errorOverlay.frame.size.height + errorOverlay.frame.origin.y - 13;
                phoneView.frame = CGRectMake(phoneView.frame.origin.x, yOrigin, phoneView.frame.size.width, phoneView.frame.size.height);
                
                yOrigin = yOrigin + phoneView.frame.size.height + 15;
                emailView.frame = CGRectMake(emailView.frame.origin.x, yOrigin, emailView.frame.size.width, emailView.frame.size.height);
                
                yOrigin = yOrigin + emailView.frame.size.height + 15;
                passwordView.frame = CGRectMake(passwordView.frame.origin.x, yOrigin, passwordView.frame.size.width, passwordView.frame.size.height);
                
                yOrigin = yOrigin + passwordView.frame.size.height + 15;
                btnSignIn.frame = CGRectMake(btnSignIn.frame.origin.x, yOrigin, btnSignIn.frame.size.width, btnSignIn.frame.size.height);
                
                scroller.contentSize = CGSizeMake(scroller.contentSize.width, scroller.contentSize.height-30);
            }
        } else {
            if (isUsernameAutoGenerated) {
                isUsernameAutoGenerated = NO;
                NSString *newUserName = [[items objectForKey:@"status"] objectForKey:@"newusername"];
                txtUsername.text = newUserName;
                [btnUsernameAccesary setHidden:NO];
                [btnUsernameAccesary setImage:[UIImage imageNamed:@"right-icon.png"] forState:UIControlStateNormal];
                txtUsername.textColor = [UIColor colorWithRed:129.0/255.0 green:197.0/255.0 blue:102.0/255.0 alpha:1.0];
                
                [errorOverlay removeFromSuperview];
                if (isFrameExtended) {
                    isFrameExtended = NO;
                    
                    float yOrigin = errorOverlay.frame.size.height + errorOverlay.frame.origin.y - 13;
                    phoneView.frame = CGRectMake(phoneView.frame.origin.x, yOrigin, phoneView.frame.size.width, phoneView.frame.size.height);
                    
                    yOrigin = yOrigin + phoneView.frame.size.height + 15;
                    emailView.frame = CGRectMake(emailView.frame.origin.x, yOrigin, emailView.frame.size.width, emailView.frame.size.height);
                    
                    yOrigin = yOrigin + emailView.frame.size.height + 15;
                    passwordView.frame = CGRectMake(passwordView.frame.origin.x, yOrigin, passwordView.frame.size.width, passwordView.frame.size.height);
                    
                    yOrigin = yOrigin + passwordView.frame.size.height + 15;
                    btnSignIn.frame = CGRectMake(btnSignIn.frame.origin.x, yOrigin, btnSignIn.frame.size.width, btnSignIn.frame.size.height);
                    
                    scroller.contentSize = CGSizeMake(scroller.contentSize.width, scroller.contentSize.height-30);
                }
                
            } else {
                [btnUsernameAccesary setHidden:NO];
                [btnUsernameAccesary setImage:[UIImage imageNamed:@"cancel-icon.png"] forState:UIControlStateNormal];
                txtUsername.textColor = [UIColor colorWithRed:229.0/255.0 green:78.0/255.0 blue:77.0/255.0 alpha:1.0];
                
                [errorOverlay removeFromSuperview];
                [errorOverlay setAlpha:0.f];
                
                [UIView animateWithDuration:1.f delay:0.f options:UIViewAnimationOptionCurveEaseIn animations:^{
                    [errorOverlay setAlpha:1.f];
                } completion:^(BOOL finished) {
                    
                }];
                
                isFrameExtended = YES;
                CGRect frame = usernameView.frame;
                errorOverlay.frame = CGRectMake(frame.origin.x+5, frame.origin.y + frame.size.height, errorOverlay.frame.size.width, errorOverlay.frame.size.height);
                [scroller addSubview:errorOverlay];
                [scroller bringSubviewToFront:errorOverlay];
                
                float yOrigin = errorOverlay.frame.size.height + errorOverlay.frame.origin.y + 10;
                phoneView.frame = CGRectMake(phoneView.frame.origin.x, yOrigin, phoneView.frame.size.width, phoneView.frame.size.height);
                
                yOrigin = yOrigin + phoneView.frame.size.height + 15;
                emailView.frame = CGRectMake(emailView.frame.origin.x, yOrigin, emailView.frame.size.width, emailView.frame.size.height);
                
                yOrigin = yOrigin + emailView.frame.size.height + 15;
                passwordView.frame = CGRectMake(passwordView.frame.origin.x, yOrigin, passwordView.frame.size.width, passwordView.frame.size.height);
                
                yOrigin = yOrigin + passwordView.frame.size.height + 15;
                btnSignIn.frame = CGRectMake(btnSignIn.frame.origin.x, yOrigin, btnSignIn.frame.size.width, btnSignIn.frame.size.height);
                
                scroller.contentSize = CGSizeMake(scroller.contentSize.width, scroller.contentSize.height+30);
            }
        }
            
        self.view.userInteractionEnabled = YES;
        [appDelegateObj showActivity:self.view showOrHide:NO];
    }
}

- (void)requestFailed:(ASIHTTPRequest *)request {
	
	// NSString *receivedString = [request responseString];
    //[AlertHandler hideAlert];
    self.view.userInteractionEnabled = YES;
    [appDelegateObj showActivity:self.view showOrHide:NO];
    
    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Message" message:@"Sorry, There is No Network Connection. Please Check The Network Connectivity" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
	[alertView show];
	[alertView release];
}


#pragma mark - Picker Methods

-(void)datePickerSetDate:(TDDatePickerController*)viewController {
    sex.text=picker.pickedStr;
    [self dismissSemiModalViewController:picker];
}

-(void)datePickerCancel:(TDDatePickerController*)viewController{
    [self dismissSemiModalViewController:picker];
}

-(IBAction)doneButtonPressed:(id)sender {
    
    [self hideKeyboard];
    [UIView beginAnimations:nil context:NULL];
    [UIView setAnimationBeginsFromCurrentState:NO];
    [UIView setAnimationDuration:2.0] ;
    [pickerViewPopup removeFromSuperview];
    [UIView commitAnimations];
    NSDateFormatter *df = [[NSDateFormatter alloc] init];
    [df setDateFormat:@"yyyy/MM/dd"];
    //[[NSUserDefaults standardUserDefaults] setObject:[NSString stringWithFormat:@"%@", [df stringFromDate:pickerView.date]] forKey:@"DOB"];
    [[NSUserDefaults standardUserDefaults] setObject:@"" forKey:@"DOB"];
    
    df.dateStyle = NSDateFormatterMediumStyle;
    dob.text = [NSString stringWithFormat:@"%@",
                [df stringFromDate:pickerView.date]];
    [df release];
}

-(IBAction)cancelButtonPressed:(id)sender {
    
    [self hideKeyboard];
    
    [UIView beginAnimations:nil context:NULL];
    [UIView setAnimationBeginsFromCurrentState:NO];
    [UIView setAnimationDuration:2.0] ;
    [pickerViewPopup removeFromSuperview];
    [UIView commitAnimations];
    [self hideKeyboard];
    dob.text = @"";
}

#pragma mark - UITextField Delegate

-(BOOL) textFieldShouldBeginEditing:(UITextField *) textField
{
    if (textField.tag==9) {
        txtUsername.textColor = SELECTED_COLOR;
        if (txtUsername.text.length == 0)
        [btnUsernameAccesary setHidden:YES];
    }
    
    if (textField.tag==4 || textField.tag==5) {
        [self hideKeyboard];
    }
    else if (textField.tag==4 || textField.tag==5) {
        return YES;
    }
    
    if (textField.tag == 4)
    {
        [self hideKeyboard];
        
        NSCalendar * gregorian = [[[NSCalendar alloc] initWithCalendarIdentifier: NSGregorianCalendar] autorelease];
        NSDate * currentDate = [NSDate date];
        NSDateComponents * comps = [[NSDateComponents alloc] init];
        [comps setYear: -14];
        NSDate * maxDate = [gregorian dateByAddingComponents: comps toDate: currentDate options: 0];
        [comps setYear: -100];
        NSDate * minDate = [gregorian dateByAddingComponents: comps toDate: currentDate options: 0];
        [comps setYear: -14];
        [comps release];
    
        pickerViewPopup = [[UIView alloc] initWithFrame:CGRectMake(0, 220, 320, 300)];
        if(IS_IPHONE_5) {
            pickerViewPopup = [[UIView alloc] initWithFrame:CGRectMake(0, 330, 320, 300)];
        }
        
        if ([[[UIDevice currentDevice] systemVersion] floatValue] < 7) {
            pickerViewPopup = [[UIView alloc] initWithFrame:CGRectMake(0, 160, 320, 300)];
            if(IS_IPHONE_5) {
                pickerViewPopup = [[UIView alloc] initWithFrame:CGRectMake(0, 245, 320, 300)];
            }
        }
        
        pickerViewPopup.backgroundColor = [UIColor clearColor];
        if ([pickerView retainCount]) {
            [pickerView release];
        }
        
        pickerView = [[UIDatePicker alloc] initWithFrame:CGRectMake(0, 44, 0, 0)];
        if (IS_IOS7) {
            pickerView.frame = CGRectMake(0, 44, 0, 0);
        }
        
        pickerView.backgroundColor = [UIColor whiteColor];
        pickerView.datePickerMode = UIDatePickerModeDate;
        pickerView.hidden = NO;
        pickerView.date = [NSDate date];
        
        pickerView.minimumDate = minDate;
        pickerView.maximumDate = maxDate;
        pickerView.date = maxDate;
        CGRect frame;
    
        frame = CGRectMake(0, 0, 320, 44.1);
        
        UIToolbar *pickerToolbar = [[UIToolbar alloc] initWithFrame:frame];
        
        [pickerToolbar setShadowImage:[[UIImage alloc] init] forToolbarPosition:UIToolbarPositionAny];
        [pickerToolbar setBackgroundImage:[UIImage imageNamed:@"Pickerbar.png"] forToolbarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];
        [pickerToolbar sizeToFit];
        
        NSMutableArray *barItems = [[NSMutableArray alloc] init];
        
        UIBarButtonItem *flexSpace = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:self action:nil];
        [barItems addObject:flexSpace];
        

        UIBarButtonItem *doneBtn;
        if (IS_IOS7) {
            doneBtn = [[UIBarButtonItem alloc] initWithTitle:@"Done" style:UIBarButtonSystemItemDone target:self action:@selector(doneButtonPressed:)];
        } else {
            doneBtn = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(doneButtonPressed:)];
        }
        
        [doneBtn setTitleTextAttributes: [NSDictionary dictionaryWithObjectsAndKeys:
                                            [UIColor whiteColor], UITextAttributeTextColor,
                                            [UIFont fontWithName:@"HelveticaNeue-regular" size:14.0], UITextAttributeFont,
                                            nil] forState:UIControlStateNormal];
        [barItems addObject:doneBtn];
        
        UIBarButtonItem *cancelBtn = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemCancel target:self action:@selector(cancelButtonPressed:)];
        [cancelBtn setTitleTextAttributes: [NSDictionary dictionaryWithObjectsAndKeys:
                                            [UIColor whiteColor], UITextAttributeTextColor,
                                            [UIFont fontWithName:@"HelveticaNeue-regular" size:14.0], UITextAttributeFont,
                                            nil] forState:UIControlStateNormal];
        [barItems addObject:cancelBtn];
        
        [pickerToolbar setItems:barItems animated:YES];
        
        [pickerViewPopup addSubview:pickerToolbar];
        [pickerViewPopup addSubview:pickerView];
        
        [UIView beginAnimations:nil context:NULL];
        [UIView setAnimationBeginsFromCurrentState:NO];
        [UIView setAnimationDuration:2.0] ;
        [self.view addSubview:pickerViewPopup];
        [UIView commitAnimations];
        
        
        [barItems release];
        [flexSpace release];
        [pickerToolbar release];
        
        return NO;
    }
    else if (textField.tag==5) {
        picker= [[TDDatePickerController alloc] initWithNibName:@"TDDatePickerController" bundle:nil];
        picker.pickerData=[[[NSMutableArray alloc]initWithObjects:@"Male",@"Female",nil] autorelease];
        picker.delegate=self;
		[self presentSemiModalViewController:picker];
        
		return NO;
    }
    else
    {
        return YES;
    }
}

-(void)textFieldDidBeginEditing:(UITextField *)textField {
    
    if (textField.tag==9) {
        if ([textField.text length] > 0) {
            Reachability *networkReachability = [Reachability reachabilityForInternetConnection];
            NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];
            if (networkStatus == NotReachable) {
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"No Internet Connection" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
                [alert show];
                [alert release];
            } else {
                
                [UIView animateWithDuration:1.f delay:0.f options:UIViewAnimationOptionCurveEaseInOut animations:^{
                    [errorOverlay setAlpha:0.f];
                    [errorOverlay removeFromSuperview];
                } completion:nil];
                
                
                if (isFrameExtended) {
                    isFrameExtended = NO;
                
                    [btnUsernameAccesary setHidden:YES];
                    
                    float yOrigin = errorOverlay.frame.size.height + errorOverlay.frame.origin.y - 13;
                    phoneView.frame = CGRectMake(phoneView.frame.origin.x, yOrigin, phoneView.frame.size.width, phoneView.frame.size.height);
                
                    yOrigin = yOrigin + phoneView.frame.size.height + 15;
                    emailView.frame = CGRectMake(emailView.frame.origin.x, yOrigin, emailView.frame.size.width, emailView.frame.size.height);
                
                    yOrigin = yOrigin + emailView.frame.size.height + 15;
                    passwordView.frame = CGRectMake(passwordView.frame.origin.x, yOrigin, passwordView.frame.size.width, passwordView.frame.size.height);
                
                    yOrigin = yOrigin + passwordView.frame.size.height + 15;
                    btnSignIn.frame = CGRectMake(btnSignIn.frame.origin.x, yOrigin, btnSignIn.frame.size.width, btnSignIn.frame.size.height);
                    
                    scroller.contentSize = CGSizeMake(scroller.contentSize.width, scroller.contentSize.height-30);
                }
            }
        }
    }
    
    /*
    if (textField.tag==1) {
        [pickerViewPopup removeFromSuperview];
        
        const int movementDistance =30;
        const float movementDuration = 0.3f;
        int movement = (YES ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:YES:30];
    }
    else if (textField.tag==2) {
        [pickerViewPopup removeFromSuperview];
        
        const int movementDistance =80;
        const float movementDuration = 0.3f;
        int movement = (YES ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:YES:80];
    }
    else if (textField.tag==5) {
        [pickerViewPopup removeFromSuperview];
        
        const int movementDistance = 130;
        const float movementDuration = 0.3f;
        int movement = (YES ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        //[self animateTextField:YES:160];
    }
    else if (textField.tag==6) {
        [pickerViewPopup removeFromSuperview];
        
        const int movementDistance = 150;
        const float movementDuration = 0.3f;
        int movement = (YES ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:YES:200];
    }
    else if (textField.tag==7) {
        [pickerViewPopup removeFromSuperview];
        
        const int movementDistance = 170;
        const float movementDuration = 0.3f;
        int movement = (YES ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:YES:200];
    }*/
}

-(void)textFieldDidEndEditing:(UITextField *)textField
{
    if (textField.tag == 1) {
        if ([textField.text length] > 0) {
            NSString *username = @"&";
            
            NSArray *array = [textField.text componentsSeparatedByString:@" "];
            for (int i = 0; i < [array count]; i++) {
                username = [username stringByAppendingString:[[array objectAtIndex:i] capitalizedString]];
            }
            
            //username = [username stringByAppendingString:[NSString stringWithRandomCharacters:txtprofilename.text ofLength:6]];
            txtUsername.text = [username stringByReplacingOccurrencesOfString:@" " withString:@""];
            [textField resignFirstResponder];
            isUsernameAutoGenerated = YES;
            [self CheckUsernameExist:txtUsername.text];
        }
    } else if (textField.tag==9) {
        if ([textField.text length] > 0) {
            Reachability *networkReachability = [Reachability reachabilityForInternetConnection];
            NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];
            if (networkStatus == NotReachable) {
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"No Internet Connection" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
                [alert show];
                [alert release];
            } else {
                [textField resignFirstResponder];
                isUsernameAutoGenerated = NO;
                [self CheckUsernameExist:txtUsername.text];
            }
        }
    }
    
     /*
    else if (textField.tag==2) {
        
        const int movementDistance =80;
        const float movementDuration = 0.3f;
        int movement = (NO ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:NO:80];
    }
    else if (textField.tag==5) {
        
        const int movementDistance =130;
        const float movementDuration = 0.3f;
        int movement = (NO ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:NO:160];
    }
    else if (textField.tag==6) {
        
        const int movementDistance =160;
        const float movementDuration = 0.3f;
        int movement = (NO ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:NO:200];
    }
    else if (textField.tag==7) {
        
        const int movementDistance =180;
        const float movementDuration = 0.3f;
        int movement = (NO ? -movementDistance : movementDistance);
        [UIView beginAnimations: @"anim" context: nil];
        [UIView setAnimationBeginsFromCurrentState: YES];
        [UIView setAnimationDuration: movementDuration];
        innerView.frame = CGRectOffset(innerView.frame, 0, movement);
        [UIView commitAnimations];
        
        // [self animateTextField:NO:200];
    }*/
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if (textField.tag == 9) {
        if ([string isEqualToString:@" "]) {
            return NO;
        }
    }
    return YES;
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self hideKeyboard];
    return YES;
}

#pragma mark - Display Ovrelay 

-(void)overLayViewInfo {
//    [txtEmail resignFirstResponder];
//    [txtPassword resignFirstResponder];
//    imgBackGround.alpha = 1.0;
    [self hideKeyboard];
    //overLayViewInfo.alpha = 0.8;
    
    [[[[UIApplication sharedApplication]delegate] window] addSubview:overLayViewInfo];
    txtConfirmEmail.text = txtEmail.text;
    
    overLayViewInfo.transform = CGAffineTransformScale(CGAffineTransformIdentity, 0.001, 0.001);
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3/1.5];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(bounce1AnimationStopped1)];
    overLayViewInfo.transform = CGAffineTransformScale(CGAffineTransformIdentity, 1.1, 1.1);
    [UIView commitAnimations];
}

- (void)bounce1AnimationStopped1
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3/2];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationDidStopSelector:@selector(bounce2AnimationStopped1)];
    overLayViewInfo.transform = CGAffineTransformScale(CGAffineTransformIdentity, 0.9, 0.9);
    [UIView commitAnimations];
}

- (void)bounce2AnimationStopped1
{
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3/2];
    overLayViewInfo.transform = CGAffineTransformIdentity;
    [UIView commitAnimations];
}


#pragma mark - Action Methd

-(IBAction)onKeyReturn:(id)sender
{
    [txtPhoneNumber resignFirstResponder];
}

- (IBAction)SelectImage:(id)sender {
    
    [self hideKeyboard];
    [pickerViewPopup removeFromSuperview];
    
    isUpload = YES;
    UIActionSheet *action=[[UIActionSheet alloc]initWithTitle:appname delegate:self cancelButtonTitle:nil destructiveButtonTitle:@"Cancel" otherButtonTitles:@"Camera",@"Gallery",nil];
    [action showInView:[UIApplication sharedApplication].keyWindow];
    [action release];
}
- (IBAction)SignUpWithFacebook:(id)sender
{
    Reachability *networkReachability = [Reachability reachabilityForInternetConnection];
    NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];
    if (networkStatus == NotReachable) {
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"No Internet Connection" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    } else {
        
        appDelegateObj.LoginFromFBFlag = @"0";
        appDelegateObj.isSignUpWithFacebook = YES;
        appDelegateObj.isLoginWithFacebook = NO;
        [appDelegateObj logout];
        [appDelegateObj openSession];
    }
}

- (IBAction)btnSignupAction:(id)sender {
    
    [self hideKeyboard];
    [pickerViewPopup removeFromSuperview];
    
    if (![txtUsername.text length]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Username" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    }
    else if (![txtprofilename.text length]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Profilename" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    }
    //    else if (![lname.text length]) {
    //        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Last Name" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
    //        [alert show];
    //        [alert release];
    //    }
    //    else if (![dob.text length]) {
    //        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Date of Birth" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
    //        [alert show];
    //        [alert release];
    //    }
    //    else if (![sex.text length]) {
    //        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Select Sex" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
    //        [alert show];
    //        [alert release];
    //    }
    else if (![txtEmail.text length]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Email" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    }
    else if (![txtPassword.text length]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:appname message:@"Please Enter Password" delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];
        [alert show];
        [alert release];
    }
    else {
        [[NSUserDefaults standardUserDefaults] setValue:@"" forKey:@"FName"];
        [[NSUserDefaults standardUserDefaults] setObject:@"" forKey:@"LName"];
        [[NSUserDefaults standardUserDefaults] setObject:@"" forKey:@"Sex"];
        [[NSUserDefaults standardUserDefaults] setObject:self.city forKey:@"City"];
        [[NSUserDefaults standardUserDefaults] setObject:self.state forKey:@"State"];
        [[NSUserDefaults standardUserDefaults] setObject:self.country forKey:@"Country"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"EmailId"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"type_3rdparty"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"FBID"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"accessToken"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"ImgUrl"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"profileName"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"username"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"DOB"];
        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"ProfImage"];
        [[NSUserDefaults standardUserDefaults] synchronize];
        
        
        NSLog(@"AMIT  %@",[[NSUserDefaults standardUserDefaults] valueForKey:@"FName"]);
        [self performSelector:@selector(overLayViewInfo) withObject:nil afterDelay:0.02];
        
        // appDelegateObj.LoginFlag=FALSE;
        
        //        if ([categoryObj retainCount]) {
        //            [categoryObj release];
        //        }
        
        //        categoryObj = [[CategoryView alloc] initWithNibName:@"CategoryView" bundle:nil];
        //        [self.navigationController pushViewController:categoryObj animated:YES];
        //        [categoryObj release];
        
        
    }
}


#pragma mark - image upload



-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
	
	if(buttonIndex == 1) {
        if(![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
            
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Alert!!" message:@"Sorry! No Camera Found !!" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
            [alert show];
            [alert release];
        }
		else {
			imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
            imagePicker.allowsEditing = YES;
			[self presentViewController:imagePicker animated:YES completion:nil];
        }
    }
	if(buttonIndex == 2) {
        if ([UIImagePickerController isSourceTypeAvailable:
             UIImagePickerControllerSourceTypePhotoLibrary])
        {
            imagePicker.sourceType =UIImagePickerControllerSourceTypePhotoLibrary;
            imagePicker.allowsEditing = YES;
        }
        [self presentViewController:imagePicker animated:YES completion:nil];
	}
}

- (void) imagePickerController:(UIImagePickerController *)picker1 didFinishPickingImage:(UIImage *)imageSel editingInfo:(NSDictionary *)editingInfo {
        
	UIImage *scaledImage = imageSel; //[self imageWithImage:imageSel scaledToSize:CGSizeMake(300.0f, 400.0f)];
	[imageView setImage:scaledImage];
    imageView.contentMode = UIViewContentModeScaleAspectFill;
    [imageView setClipsToBounds: YES];
    [[imageView layer] setMasksToBounds:YES];
    [[imageView layer] setBorderColor:[[UIColor grayColor] CGColor]];
    [[imageView layer] setBorderWidth:0.7];
    [[imageView layer] setCornerRadius:imageView.frame.size.width/2.0];
    
    NSData *dataImage = UIImageJPEGRepresentation([imageView.image fixOrientation],0.80);
    [[NSUserDefaults standardUserDefaults] setObject:dataImage forKey:@"ImgUrl"];
    [[NSUserDefaults standardUserDefaults] synchronize];
    
	[imagePicker dismissModalViewControllerAnimated:YES];
}
- (UIImage*)imageWithImage:(UIImage*)image scaledToSize:(CGSize)newSize {
	
	UIGraphicsBeginImageContext( newSize );
	[image drawInRect:CGRectMake(0,0,newSize.width,newSize.height)];
	UIImage* newImage = UIGraphicsGetImageFromCurrentImageContext();
	UIGraphicsEndImageContext();
	
	return newImage;
}
- (void) alertView:(UIAlertView *)alert clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (alert.tag==111) {
        imageView.image=nil;
        isUpload=NO;
        [self.navigationController popViewControllerAnimated:YES];
    }
    else if (alert.tag == 1001) {
        exit(1);
    }
    else{
        if (alert.tag==222) {
            
        }
        else{
            [[imagePicker presentingViewController] dismissViewControllerAnimated:YES completion:nil];
        }
    }
}


@end
